@using EProcurement.Models
@model EProcurement.Models.ViewModel.Transaksi.DetailDeliveryPOProcViewModel

@{
    ViewBag.Title = "Add";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@section Styles {
    <style>
    </style>
}


<div class="page-header">
    <h1>
        Transaksi
        <small>
            <i class="ace-icon fa fa-angle-double-right"></i>
            List Purchase Order
            <i class="ace-icon fa fa-angle-double-right"></i>
            Detail Delivery
        </small>
    </h1>
</div><!-- /.page-header -->

<div class="row">
    <div class="col-xs-12">
        <!-- PAGE CONTENT BEGINS -->
        <form class="form-horizontal" role="form" method="post" action="~/ListPOProcurement/DetailDelivery">
            <!-- #section:elements.form -->

            <div class="form-group">
                <label class="col-sm-3 control-label no-padding-right" for="form-field-1">PO Number</label>
                <div class="col-sm-7">
                    @Html.EditorFor(model => model.PONumber, new { htmlAttributes = new { @class = "col-sm-7", @readonly = true } })
                    @Html.ValidationMessageFor(model => model.PONumber, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <label class="col-sm-3 control-label no-padding-right" for="form-field-1">PO Date</label>
                <div class="col-sm-7">
                    @Html.TextBoxFor(model => model.PODate, new { @Value = Model.PODate == null ? "" : Model.PODate.Value.ToString("dd/MM/yyyy"), @class = "col-sm-7", @readonly = true })
                    @Html.ValidationMessageFor(model => model.PODate, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <label class="col-sm-3 control-label no-padding-right" for="form-field-1">Plant Branch</label>
                <div class="col-sm-7">
                    @Html.EditorFor(model => model.PlantBranch, new { htmlAttributes = new { @class = "col-sm-7", @readonly = true } })
                    @Html.ValidationMessageFor(model => model.PlantBranch, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <label class="col-sm-3 control-label no-padding-right" for="form-field-1">PO Description</label>
                <div class="col-sm-7">
                    @Html.EditorFor(model => model.PODescription, new { htmlAttributes = new { @class = "col-sm-7", @readonly = true } })
                    @Html.ValidationMessageFor(model => model.PODescription, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <label class="col-sm-3 control-label no-padding-right" for="form-field-1">On The Road Price</label>
                <div class="col-sm-7">
                    @Html.EditorFor(model => model.PriceFormated, new { htmlAttributes = new { @class = "col-sm-7", @readonly = true } })
                    @Html.ValidationMessageFor(model => model.OnTheRoadPrice, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <label class="col-sm-3 control-label no-padding-right" for="form-field-1">Discount</label>
                <div class="col-sm-7">
                    @Html.EditorFor(model => model.DiscountFormated, new { htmlAttributes = new { @class = "col-sm-7", @readonly = true } })
                    @Html.ValidationMessageFor(model => model.Discount, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <label class="col-sm-3 control-label no-padding-right" for="form-field-1">Net Price</label>
                <div class="col-sm-7">
                    @Html.EditorFor(model => model.NetFormated, new { htmlAttributes = new { @class = "col-sm-7", @readonly = true } })
                    @Html.ValidationMessageFor(model => model.NetPrice, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <label class="col-sm-3 control-label no-padding-right" for="form-field-1">Promise Delivered Date</label>
                <div class="col-sm-7">
                    @Html.TextBoxFor(model => model.PromiseDeliveryDate, new { @Value = Model.PromiseDeliveryDate == null ? "" : Model.PromiseDeliveryDate.Value.ToString("dd/MM/yyyy"), @class = "col-sm-7", @readonly = true })
                    @Html.ValidationMessageFor(model => model.PromiseDeliveryDate, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <label class="col-sm-3 control-label no-padding-right" for="form-field-1">Officer Name</label>
                <div class="col-sm-7">
                    @Html.EditorFor(model => model.OfficerName, new { htmlAttributes = new { @class = "col-sm-7", @readonly = true } })
                    @Html.ValidationMessageFor(model => model.OfficerName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <label class="col-sm-3 control-label no-padding-right" for="form-field-1">License Plate Number SAP</label>
                <div class="col-sm-7">
                    @Html.EditorFor(model => model.LicensePlateNumberSAP, new { htmlAttributes = new { @id = "plateSap", @class = "col-sm-7", @readonly = true } })
                    @Html.ValidationMessageFor(model => model.LicensePlateNumberSAP, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <label class="col-sm-3 control-label no-padding-right" for="form-field-1">Chassis Number SAP</label>
                <div class="col-sm-7">
                    @Html.EditorFor(model => model.ChassisNumberSAP, new { htmlAttributes = new { @id = "chassisSap", @class = "col-sm-7", @readonly = true } })
                    @Html.ValidationMessageFor(model => model.ChassisNumberSAP, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <label class="col-sm-3 control-label no-padding-right" for="form-field-1">Machine Number SAP</label>
                <div class="col-sm-7">
                    @Html.EditorFor(model => model.MachineNumberSAP, new { htmlAttributes = new { @id = "machineSap", @class = "col-sm-7", @readonly = true } })
                    @Html.ValidationMessageFor(model => model.MachineNumberSAP, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <label class="col-sm-3 control-label no-padding-right" for="form-field-1">License Plate By Vendor</label>
                <div class="col-sm-7">
                    @Html.EditorFor(model => model.LicensePlateByVendor, new { htmlAttributes = new { @id = "plateVendor", @class = "col-sm-7", @readonly = true } })
                    <div id="errPlate" style="display:none;">
                        <i class='control-label fa fa-warning' style='color:red;'> Licence Plate tidak sesuai SAP</i>
                    </div>
                    @Html.ValidationMessageFor(model => model.LicensePlateByVendor, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <label class="col-sm-3 control-label no-padding-right" for="form-field-1">Chassis Number By Vendor</label>
                <div class="col-sm-7">
                    @Html.EditorFor(model => model.ChassisNumberByVendor, new { htmlAttributes = new { @id = "chassisVendor", @class = "col-sm-7", @readonly = true } })
                    <div id="errChassis" style="display:none;">
                        <i class='control-label fa fa-warning' style='color:red;'> Chasis Number tidak sesuai SAP</i>
                    </div>
                    @Html.ValidationMessageFor(model => model.ChassisNumberByVendor, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <label class="col-sm-3 control-label no-padding-right" for="form-field-1">Machine Number By Vendor</label>
                <div class="col-sm-7">
                    @Html.EditorFor(model => model.MachineNumberByVendor, new { htmlAttributes = new { @id = "machineVendor", @class = "col-sm-7", @readonly = true } })
                    <div id="errMachine" style="display:none;">
                        <i class='control-label fa fa-warning' style='color:red;'> Machine Number tidak sesuai SAP</i>
                    </div>
                    @Html.ValidationMessageFor(model => model.MachineNumberByVendor, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <label class="col-sm-3 control-label no-padding-right" for="form-field-1">Purchase Status</label>
                <div class="col-sm-7">
                    @Html.EditorFor(model => model.PurchaseStatus, new { htmlAttributes = new { @class = "col-sm-7", @readonly = true } })
                    @Html.ValidationMessageFor(model => model.PurchaseStatus, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <label class="col-sm-3 control-label no-padding-right" for="form-field-1">Carrosserie / Accessories Vendor Name</label>
                <div class="col-sm-7">
                    @Html.EditorFor(model => model.CarrosserieAccessoriesVendorName, new { htmlAttributes = new { @class = "col-sm-7" } })
                    @Html.ValidationMessageFor(model => model.CarrosserieAccessoriesVendorName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <label class="col-sm-3 control-label no-padding-right" for="form-field-1">Carrosserie / Accessories Address</label>
                <div class="col-sm-7">
                    @Html.EditorFor(model => model.CarrosserieAccessoriesAddress, new { htmlAttributes = new { @class = "col-sm-7" } })
                    @Html.ValidationMessageFor(model => model.CarrosserieAccessoriesAddress, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <label class="col-sm-3 control-label no-padding-right" for="form-field-1">Remarks Carrosserie / Accessories</label>
                <div class="col-sm-7">
                    @Html.EditorFor(model => model.RemarksCarrosserieAccessories, new { htmlAttributes = new { @class = "col-sm-7" } })
                    @Html.ValidationMessageFor(model => model.RemarksCarrosserieAccessories, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <label class="col-sm-3 control-label no-padding-right" for="form-field-1">PIC Carrosserie / Accessories</label>
                <div class="col-sm-7">
                    @Html.EditorFor(model => model.PICCarrosserieAccessories, new { htmlAttributes = new { @class = "col-sm-7" } })
                    @Html.ValidationMessageFor(model => model.PICCarrosserieAccessories, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <label class="col-sm-3 control-label no-padding-right" for="form-field-1">Phone Carrosserie / Accessories</label>
                <div class="col-sm-7">
                    @Html.EditorFor(model => model.PhoneCarrosserieAccessories, new { htmlAttributes = new { onkeypress = "return validasiAngka(event)", @class = "col-sm-7" } })
                    @Html.ValidationMessageFor(model => model.PhoneCarrosserieAccessories, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <label class="col-sm-3 control-label no-padding-right" for="form-field-1">Bentuk Carrosserie / Accessories</label>
                <div class="col-sm-7">
                    @Html.EditorFor(model => model.BentukCarrosserieAccessories, new { htmlAttributes = new { @class = "col-sm-7" } })
                    @Html.ValidationMessageFor(model => model.BentukCarrosserieAccessories, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <label class="col-sm-3 control-label no-padding-right" for="form-field-1">Info Promise Delivery / Accessories</label>
                <div class="col-sm-7">
                    @*@Html.TextBoxFor(model => model.InfoPromiseDeliveryAccessories, new
                                       {
                                           @Value = Model.InfoPromiseDeliveryAccessories.Value.ToString("dd.MM.yyyy"),
                                           @class = "datepicker",
                                           //placeholder = "Enter date here..."
                                       }
                        )*@
                    @Html.TextBoxFor(model => model.InfoPromiseDeliveryAccessories, new { @Value = Model.InfoPromiseDeliveryAccessories.Value.ToString("dd/MM/yyyy"), @class = "date-picker col-sm-7" })
                    @Html.ValidationMessageFor(model => model.InfoPromiseDeliveryAccessories, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <label class="col-sm-3 control-label no-padding-right" for="form-field-1">Date Entry Carrosserie / Accessories</label>
                <div class="col-sm-7">
                    @Html.TextBoxFor(model => model.DateEntryCarrosserieAccessories, new { @Value = Model.DateEntryCarrosserieAccessories == null ? "" : Model.DateEntryCarrosserieAccessories.Value.ToString("dd/MM/yyyy"), @class = "col-sm-7", @readonly = true })
                    @Html.ValidationMessageFor(model => model.DateEntryCarrosserieAccessories, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <label class="col-sm-3 control-label no-padding-right" for="form-field-1">Date Finish Carrosserie / Accessories</label>
                <div class="col-sm-7">
                    @Html.TextBoxFor(model => model.DateFinishCarrosserieAccessories, new { @Value = Model.DateFinishCarrosserieAccessories == null ? "" : Model.DateFinishCarrosserieAccessories.Value.ToString("dd/MM/yyyy"), @class = "date-picker col-sm-7" })
                    @Html.ValidationMessageFor(model => model.DateFinishCarrosserieAccessories, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <label class="col-sm-3 control-label no-padding-right" for="form-field-1">Remarks PO</label>
                <div class="col-sm-7">
                    @Html.TextAreaFor(model => model.RemarksPO, new { htmlAttributes = new { @class = "col-sm-7" } })
                    @Html.ValidationMessageFor(model => model.RemarksPO, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <label class="col-sm-3 control-label no-padding-right" for="form-field-1">Upload Scan Copy PO</label>
                <div class="col-sm-3 control-label no-padding-right" style="text-align:left;">
                    @if (Model.UploadScanCopyPO != "")
                    {
                        @Html.ActionLink("Download", "DownloadFile", "ListPOProcurement", new { fileName = Model.PONumber.Trim()+"_"+Model.UploadScanCopyPO.Trim(), fileDownloadName = Model.UploadScanCopyPO }, new { @target = "_blank" })
                    }
                    else
                    {
                        @Html.Label("Data Tidak Ada")
                    }
                </div>
            </div>

            <div class="clearfix form-actions">
                <div class="col-md-offset-3 col-md-9">
                    <button class="btn btn-danger btn-default btn-round" id="btnUpdate">
                        <i class="ace-icon fa fa-pencil-square white"></i>
                        Update
                    </button>
                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                    <a class="btn btn-grey btn-default btn-round" href="@Url.Action("Index", "ListPOProcurement")">
                        <i class="ace-icon fa fa-times white"></i>
                        Back
                    </a>
                </div>
            </div>
        </form>
    </div><!-- PAGE CONTENT ENDS -->
</div><!-- /.col -->

@section Scripts {
    <script type="text/javascript">
        jQuery(function ($) {
            //link
            $('.date-picker').datepicker({
                autoclose: true,
                format: 'dd/mm/yyyy',
                todayHighlight: true
            })
            //show datepicker when clicking on the icon
            .next().on(ace.click_event, function () {
                $(this).prev().focus();
            });
        });
        function validasiAngka(evt) {
            evt = (evt) ? evt : window.event;
            var charCode = (evt.which) ?
                    evt.which : evt.keyCode;
            if (charCode > 31 && (charCode < 48 || charCode > 57)) {
                return false;
            }
            return true;
        }
        window.onload = function () {
            if ($('#machineSap').val() != "" && $('#machineVendor').val() != "" && $('#machineVendor').val() != $('#machineSap').val()) {
                $('#errMachine').show();
            }
            else {
                $('#errMachine').hide();
            }
            if ($('#chassisSap').val() != "" && $('#chassisVendor').val() != "" && $('#chassisVendor').val() != $('#chassisSap').val()) {
                $('#errChassis').show();
            }
            else {
                $('#errChassis').hide();
            }
            if ($('#plateSap').val() != "" && $('#plateVendor').val() != "" && $('#plateVendor').val() != $('#plateSap').val()) {
                $('#errPlate').show();
            }
            else {
                $('#errPlate').hide();
            }
        };

        $('#btnUpdate').click(function () {
            //var result = true;
            //if ($('#machineSap').val() != "" && $('#machineVendor').val() != $('#machineSap').val()) {
            //    $('#errMachine').show();
            //    $('#machineVendor').focus();
            //    result = false;
            //}
            //else {
            //    $('#errMachine').hide();
            //}
            //if ($('#chassisSap').val() != "" && $('#chassisVendor').val() != $('#chassisSap').val()) {
            //    $('#errChassis').show();
            //    $('#chassisVendor').focus();
            //    result = false;
            //}
            //else {
            //    $('#errChassis').hide();
            //}
            //if ($('#plateSap').val() != "" && $('#plateVendor').val() != $('#plateSap').val()) {
            //    $('#errPlate').show();
            //    $('#plateVendor').focus();
            //    result = false;
            //}
            //else {
            //    $('#errPlate').hide();
            //}
            //return result;
        });
    </script>
}